name: Run Tests

on:
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: keep_docs_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install GraphicsMagick, ImageMagick and PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y graphicsmagick imagemagick postgresql-client

      - name: Install dependencies
        run: npm ci

      - name: Setup environment variables for GitHub Actions
        run: |
          cd apps/server
          cp .env.test .env
          sed -i 's/DB_PORT=5440/DB_PORT=5432/' .env
          sed -i 's/DB_USER=keep_docs/DB_USER=postgres/' .env
          sed -i 's/DB_PASSWORD=keep_docs/DB_PASSWORD=postgres/' .env
          sed -i 's/DB_DATABASE=keep_docs/DB_DATABASE=keep_docs_test/' .env
          sed -i 's/PORT=3334/PORT=3333/' .env
          sed -i 's/HOST=0.0.0.0/HOST=localhost/' .env

      - name: Run database migrations
        working-directory: ./apps/server
        run: |
          npm run build
          node ace migration:run

      - name: Run database seeders
        working-directory: ./apps/server
        run: node ace db:seed

      - name: Run linting
        working-directory: ./apps/server
        run: npm run lint

      - name: Run type checking
        working-directory: ./apps/server
        run: npm run typecheck

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run tests
        working-directory: ./apps/server
        run: npm run test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_DATABASE: keep_docs_test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            apps/server/coverage/
            apps/server/test-results/
          retention-days: 7