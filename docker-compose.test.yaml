version: '3.8'

services:
  postgres_test:
    image: postgres:15
    restart: always
    container_name: postgres_adonis_test
    environment:
      - POSTGRES_USER=adonis_test
      - POSTGRES_PASSWORD=adonis_test
      - POSTGRES_DB=adonis_test
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - "5441:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U adonis_test -d adonis_test" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - test-network

  server_test:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
      target: development
    volumes:
      - ./apps/server:/app/apps/server
      - /app/apps/server/node_modules
    working_dir: /app/apps/server
    command: sh -c "npm install && node ace migration:fresh --force && node ace db:seed && npm run test"
    restart: "no"
    environment:
      - NODE_ENV=test
      - PORT=3334
      - HOST=0.0.0.0
      - DB_HOST=postgres_test
      - DB_PORT=5432
      - DB_USER=adonis_test
      - DB_PASSWORD=adonis_test
      - DB_DATABASE=adonis_test
      - LOG_LEVEL=silent
      - APP_KEY=test_app_key_for_testing_only_12345678901234567890
      - SMTP_HOST=smtp.test.com
      - SMTP_PORT=587
      - SMTP_USERNAME=test@example.com
      - SMTP_PASSWORD=test_password
      - CLIENT_URL=http://localhost:3030
      - GITHUB_CLIENT_ID=test_github_client_id
      - GITHUB_CLIENT_SECRET=test_github_client_secret
    depends_on:
      postgres_test:
        condition: service_healthy
    networks:
      - test-network

networks:
  test-network:
    driver: bridge
