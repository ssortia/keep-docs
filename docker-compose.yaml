version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    container_name: keep_docs_db
    environment:
      - POSTGRES_USER=keep_docs
      - POSTGRES_PASSWORD=keep_docs
      - POSTGRES_DB=keep_docs
    ports:
      - "5440:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
  client:
    build:
      context: .
      dockerfile: apps/client/Dockerfile
      target: development
    ports:
      - "3030:3000"
    volumes:
      - ./apps/client:/app/apps/client
      - ./apps/client/node_modules:/app/apps/client/node_modules
      - /app/apps/client/node_modules
    working_dir: /app/apps/client
    command: sh -c "npm install && npm run dev"
    environment:
    - NODE_ENV=development
    - NEXT_DISABLE_TURBOPACK=1
    - NEXT_PRIVATE_STACK_FRAME_EXTERNAL=1
    networks:
      - app-network

  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
      target: development
    ports:
      - "3333:3333"
    volumes:
      - ./apps/server:/app/apps/server
      - /app/apps/server/node_modules
    working_dir: /app/apps/server
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - PORT=3333
      - HOST=0.0.0.0
      - DB_CONNECTION=pg
      - PG_HOST=keep_docs_db
      - PG_PORT=5432
      - PG_USER=keep_docs
      - PG_PASSWORD=keep_docs
      - PG_DB_NAME=keep_docs
    networks:
      - app-network

#  swagger-ui:
#    image: swaggerapi/swagger-ui:latest
#    container_name: swagger_ui
#    ports:
#      - "8080:8080"
#    environment:
#      - SWAGGER_JSON_URL=http://localhost:3333/swagger
#    depends_on:
#      - server
#    networks:
#      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
